{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_classes/script-status.ts","webpack:///src/app/_classes/test-case.ts","webpack:///src/app/_services/live-data.service.ts","webpack:///src/app/_services/snapshot.service.ts","webpack:///src/app/_services/status.service.ts","webpack:///src/app/_services/test-case.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chart/chart.component.ts","webpack:///src/app/chart/chart.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/live-data-viewer/live-data-viewer.component.ts","webpack:///src/app/live-data-viewer/live-data-viewer.component.html","webpack:///src/app/script-status/script-status.component.ts","webpack:///src/app/script-status/script-status.component.html","webpack:///src/app/snapshot-control/snapshot-control.component.ts","webpack:///src/app/snapshot-control/snapshot-control.component.html","webpack:///src/app/test-case-list/test-case-list.component.ts","webpack:///src/app/test-case-list/test-case-list.component.html","webpack:///src/app/test-case-viewer/test-case-viewer.component.ts","webpack:///src/app/test-case-viewer/test-case-viewer.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ScriptStatus","name","running","Running","Name","TestCase","apiSource","SnapshotName","snap_name","TestCaseID","case_id","_windowTimes","Set","time","add","startTime","Math","min","values","endTime","max","floor","LiveDataService","httpClient","Data","pipe","subscribe","get","data","next","providedIn","SnapshotService","StatusService","Scripts$","tick","status","scripts","forEach","script","TestCaseService","_testCases","pizza","apiCases","workingCase","apiCase","find","c","push","AddWindow","test_ac_time","snapshot","List","testCases","post","times","WindowTimes","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","library","addIcons","declarations","providers","bootstrap","ChartComponent","view","legend","showLabels","animations","xAxis","yAxis","showYAxisLabel","showXAxisLabel","xAxisLabel","yAxisLabel","timeline","colorScheme","domain","console","log","JSON","parse","stringify","onSelect","onActivate","onDeactivate","HeaderComponent","LiveDataViewerComponent","dataService","datumCount","series","length","ScriptStatusComponent","statusSvc","SnapshotControlComponent","snapshotSvc","snaps","Snapshots","Start","Stop","StartSnapshot","TestCaseListComponent","tcSvc","Tests$","snapshotName","GetData","TestCaseViewerComponent","route","Test$","params","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,Y,GAIT,sBAAYC,IAAZ,EAA0BC,OAA1B,EAA4C;AAAA;;AAFrC,WAAAC,OAAA,GAAmB,KAAnB;AAGH,WAAKC,IAAL,GAAYH,IAAZ;AACA,WAAKE,OAAL,GAAeD,OAAf;AACH,K;;;;;;;;;;;;;;;;;ACPL;AAAA;;;AAAA;AAAA;AAAA;;QAAaG,Q;AAKT,wBAAYC,SAAZ,EAA4B;AAAA;;AACxB,aAAKC,YAAL,GAAoBD,SAAS,CAACE,SAA9B;AACA,aAAKC,UAAL,GAAkBH,SAAS,CAACI,OAA5B;AACA,aAAKC,YAAL,GAAoB,IAAIC,GAAJ,EAApB;AACH;;;;kCAEgBC,I,EAAc;AAC3B,eAAKF,YAAL,CAAkBG,GAAlB,CAAsBD,IAAtB;AACH;;;4BAEkB;AACf,cAAIE,SAAS,GAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ,KAAKL,YAAL,CAAkBO,MAAlB,EAAR,EAApB;AACA,cAAIC,OAAO,GAAGH,IAAI,CAACI,GAAL,OAAAJ,IAAI,qBAAQ,KAAKL,YAAL,CAAkBO,MAAlB,EAAR,EAAlB;AACA,iBAAOF,IAAI,CAACK,KAAL,CAAW,CAACF,OAAO,GAAGJ,SAAX,IAAwB,IAAnC,CAAP;AACH;;;4BAEmB;AAChB,iBAAOC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ,KAAKL,YAAL,CAAkBO,MAAlB,EAAR,EAAX;AACH;;;4BAEqB;AAClB,oCAAW,KAAKP,YAAL,CAAkBO,MAAlB,EAAX;AACH;;;;;;;;;;;;;;;;;;;;;AC3BL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaI,e,GAIX,yBAAoBC,UAApB,EAA4C;AAAA;;AAAA;;AAAxB,WAAAA,UAAA,GAAAA,UAAA;AAFb,WAAAC,IAAA,GAAqB,IAAI,4CAAJ,EAArB;AAGL,4DAAS,KAAT,EAAgBC,IAAhB,CAAqB,iEAAU,CAAV,CAArB,EAAmCC,SAAnC,CAA6C,YAAM;AACjD,aAAI,CAACH,UAAL,CAAgBI,GAAhB,CAAoB,uDAApB,EAA6ED,SAA7E,CAAuF,UAAAE,IAAI,EAAI;AAC7F,eAAI,CAACJ,IAAL,CAAUK,IAAV,CAAeD,IAAf;AACD,SAFD;AAGD,OAJD;AAKD,K;;;uBAVUN,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVQ,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACR5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,e;AAEX,+BAAoBR,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAA2B;;;;+BAEpC;AACT,iBAAO,KAAKA,UAAL,CAAgBI,GAAhB,CAA2B,8CAA3B,CAAP;AACD;;;8BAEY1B,I,EAAI;AACf,iBAAO,KAAKsB,UAAL,CAAgBI,GAAhB,CAAyB,wDAAwD1B,IAAjF,CAAP;AACD;;;6BAEWc,S,EAAS;AACnB,iBAAO,KAAKQ,UAAL,CAAgBI,GAAhB,CAAyB,wDAAwDZ,SAAjF,CAAP;AACD;;;;;;;uBAdUgB,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVD,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaE,a,GAIX,uBAAoBT,UAApB,EAA4C;AAAA;;AAAA;;AAAxB,WAAAA,UAAA,GAAAA,UAAA;AAHb,WAAAU,QAAA,GAA6C,IAAI,kDAAJ,EAA7C;AACC,WAAAC,IAAA,GAAO,sDAAS,IAAT,CAAP;AAGN,WAAKA,IAAL,CAAUR,SAAV,CAAoB,YAAM;AACxB,cAAI,CAACH,UAAL,CAAgBI,GAAhB,CAAoB,qCAApB,EAA2DD,SAA3D,CAAqE,UAACS,MAAD,EAAmB;AACtF,cAAIC,OAAO,GAAG,IAAIxB,GAAJ,EAAd;AACAuB,gBAAM,CAACE,OAAP,CAAe,UAAAC,MAAM,EAAI;AACvBF,mBAAO,CAACtB,GAAR,CAAY,IAAI,mEAAJ,CAAiBwB,MAAM,CAACrC,IAAxB,EAA8BqC,MAAM,CAACpC,OAArC,CAAZ;AACD,WAFD;;AAGA,gBAAI,CAAC+B,QAAL,CAAcJ,IAAd,CAAmBO,OAAnB;AACD,SAND;AAOD,OARD;AASD,K;;;uBAdUJ,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVF,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACR1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaS,e;AAGX,+BAAoBhB,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAFZ,aAAAiB,UAAA,GAAyB,EAAzB;AAGN,YAAIC,KAAK,GAAG,OAAZ;AACD;;;;+BAEU;AAAA;;AACT,iBAAO,KAAKlB,UAAL,CAAgBI,GAAhB,CAA2B,8CAA3B,EAA2EF,IAA3E,CACL,2DAAI,UAAAiB,QAAQ,EAAI;AACd,gBAAIC,WAAW,GAAa,IAA5B;AACAD,oBAAQ,CAACL,OAAT,CAAiB,UAAAO,OAAO,EAAI;AAC1BD,yBAAW,GAAG,MAAI,CAACH,UAAL,CAAgBK,IAAhB,CAAqB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACvC,YAAF,IAAkBqC,OAAO,CAACpC,SAA1B,IAAuCsC,CAAC,CAACrC,UAAF,IAAgBmC,OAAO,CAAClC,OAAnE;AAAA,eAAtB,CAAd;;AACA,kBAAGiC,WAAW,IAAI,IAAlB,EAAwB;AACtB,sBAAI,CAACH,UAAL,CAAgBO,IAAhB,CAAqB,IAAI,2DAAJ,CAAaH,OAAb,CAArB;AACD,eAFD,MAEO;AACLD,2BAAW,CAACK,SAAZ,CAAsBJ,OAAO,CAACK,YAA9B;AACD;AACF,aAPD;AASA,mBAAO,MAAI,CAACT,UAAZ;AACD,WAZD,CADK,CAAP;AAeD;;;gCAEcU,Q,EAAgB;AAAA;;AAC7B,iBAAO,KAAKC,IAAL,GAAY1B,IAAZ,CACL,iEAAU,UAAA2B,SAAS,EAAI;AACrB,gBAAIT,WAAW,GAAGS,SAAS,CAACP,IAAV,CAAe,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACvC,YAAF,IAAkB2C,QAAtB;AAAA,aAAhB,CAAlB;AACA,mBAAO,MAAI,CAAC3B,UAAL,CAAgB8B,IAAhB,CAA0B,8CAA1B,EAA0E;AAACC,mBAAK,EAAEX,WAAW,CAACY;AAApB,aAA1E,CAAP;AACD,WAHD,CADK,CAAP;AAMD;;;;;;;uBAhCUhB,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVT,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACT5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAM0B,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KADqB,EAErB;AAAED,UAAI,EAAE,WAAR;AAAqBC,eAAS,EAAE;AAAhC,KAFqB,EAGrB;AAAED,UAAI,EAAE,oBAAR;AAA8BC,eAAS,EAAE;AAAzC,KAHqB,CAAvB;;QAUaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAER1D,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACjB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOagE,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,SAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,0C;AAAA;AAAA;ACPzB;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACJ;;;;;;;;;sEDFaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA4CaC,S,GACX,mBAAmBC,OAAnB,EAA2C;AAAA;;AAAxB,WAAAA,OAAA,GAAAA,OAAA;AACjBA,aAAO,CAACC,QAAR,CAAiB,uFAAjB,EAAwC,yEAAxC;AACD,K;;;YAHUF,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S,EAAS,sI;AAAA,O;AAAA,iBAHT,E;AAAE,gBATJ,CACP,uEADO,EAEP,6FAFO,EAGP,oEAHO,EAIP,kFAJO,EAKP,qEALO,EAMP,oEANO,EAOP,qEAPO,CASI;;;;0HAGFA,S,EAAS;AAAA,uBArBlB,2DAqBkB,EApBlB,4FAoBkB,EAnBlB,qGAmBkB,EAlBlB,qGAkBkB,EAjBlB,qGAiBkB,EAhBlB,sEAgBkB,EAflB,yEAekB,EAdlB,+FAckB;AAdG,kBAGrB,uEAHqB,EAIrB,6FAJqB,EAKrB,oEALqB,EAMrB,kFANqB,EAOrB,qEAPqB,EAQrB,oEARqB,EASrB,qEATqB;AAcH,O;AALH,K;;;;;sEAKNA,S,EAAS;cAvBrB,sDAuBqB;eAvBZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,4FAFY,EAGZ,qGAHY,EAIZ,qGAJY,EAKZ,qGALY,EAMZ,sEANY,EAOZ,yEAPY,EAQZ,+FARY,CADN;AAWRT,iBAAO,EAAE,CACP,uEADO,EAEP,6FAFO,EAGP,oEAHO,EAIP,kFAJO,EAKP,qEALO,EAMP,oEANO,EAOP,qEAPO,CAXD;AAoBRU,mBAAS,EAAE,EApBH;AAqBRC,mBAAS,EAAE,CAAC,2DAAD;AArBH,S;AAuBY,Q;;;;;;;;;;;;;;;;;;;;;;AC5CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,c;AAqBX,gCAAc;AAAA;;AAlBd,aAAAC,IAAA,GAAc,CAAC,IAAD,EAAO,GAAP,CAAd,CAkBc,CAhBd;;AACA,aAAAC,MAAA,GAAkB,IAAlB;AACA,aAAAC,UAAA,GAAsB,IAAtB;AACA,aAAAC,UAAA,GAAsB,IAAtB;AACA,aAAAC,KAAA,GAAiB,IAAjB;AACA,aAAAC,KAAA,GAAiB,IAAjB;AACA,aAAAC,cAAA,GAA0B,IAA1B;AACA,aAAAC,cAAA,GAA0B,IAA1B;AACA,aAAAC,UAAA,GAAqB,MAArB;AACA,aAAAC,UAAA,GAAqB,UAArB;AACA,aAAAC,QAAA,GAAoB,IAApB;AAEA,aAAAC,WAAA,GAAc;AACZC,gBAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD;AADI,SAAd;AAKC;;;;mCAEO,CACP;;;iCAEQ1D,I,EAAI;AACX2D,iBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe/D,IAAf,CAAX,CAA5B;AACD;;;mCAEUA,I,EAAI;AACb2D,iBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe/D,IAAf,CAAX,CAAxB;AACD;;;qCAEYA,I,EAAI;AACf2D,iBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe/D,IAAf,CAAX,CAA1B;AACD;;;;;;;uBArCU6C,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,c;AAAA,qO;AAAA;AAAA;ACP3B;;AAYE;AAAA,mBAAU,IAAAmB,QAAA,QAAV;AAA0B,WAA1B,EAA2B,UAA3B,EAA2B;AAAA,mBACf,IAAAC,UAAA,QADe;AACG,WAD9B,EAA2B,YAA3B,EAA2B;AAAA,mBAEb,IAAAC,YAAA,QAFa;AAEO,WAFlC;;AAMF;;;;AAjBE,qFAAa,QAAb,EAAa,eAAb,EAAa,QAAb,EAAa,UAAb,EAAa,gBAAb,EAAa,kBAAb,EAAa,gBAAb,EAAa,kBAAb,EAAa,OAAb,EAAa,SAAb,EAAa,OAAb,EAAa,SAAb,EAAa,YAAb,EAAa,cAAb,EAAa,YAAb,EAAa,cAAb,EAAa,UAAb,EAAa,YAAb,EAAa,SAAb,EAAa,QAAb;;;;;;;;;sEDMWrB,c,EAAc;cAL1B,uDAK0B;eALhB;AACTT,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;gBACxB;;;;;;;;;;;;;;;;;;;;AERH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa6B,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,oG;AAAA;AAAA;ACP5B;;AACI;;AAAuC;;AAAS;;AAChD;;AAA+B;;AAAU;;AAC7C;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;;;;sEDKMA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT/B,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGA;;AACI;;AACJ;;;;;;AADe;;AAAA;;;;QDIF8B,uB;AAGX,uCAAmBC,WAAnB,EAAiD;AAAA;;AAAA;;AAA9B,aAAAA,WAAA,GAAAA,WAAA;AAFZ,aAAAC,UAAA,GAAqB,CAArB;AAGL,aAAKD,WAAL,CAAiBzE,IAAjB,CAAsBE,SAAtB,CAAgC,UAAAE,IAAI,EAAI;AACtC,gBAAI,CAACsE,UAAL,GAAkBtE,IAAI,CAAC,CAAD,CAAJ,CAAQuE,MAAR,CAAeC,MAAjC;AACD,SAFD;AAGA;;;;mCAEM,CACP;;;;;;;uBAVUJ,uB,EAAuB,4I;AAAA,K;;;YAAvBA,uB;AAAuB,2C;AAAA,c;AAAA,a;AAAA,wC;AAAA;AAAA;ACRpC;;AAAI;;AAAS;;AACb;;AAAI;;AAA+B;;AAEnC;;;;;;AAFI;;AAAA;;AAEU;;AAAA;;;;;;;;;;sEDKDA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACThC,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;AERpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIY;;;;;;AACA;;;;;;AAFJ;;AACI;;AACA;;AACA;;AAAe;;;;;;AAFN;;AAAA;;AACA;;AAAA;;AACT;;AAAA;;;;;;AAJR;;AACI;;AAIJ;;;;;;AAJQ;;AAAA;;;;QDKCmC,qB;AAEX,qCAAmBC,SAAnB,EAA6C;AAAA;;AAA1B,aAAAA,SAAA,GAAAA,SAAA;AAA6B;;;;mCAExC,CACP;;;;;;;uBALUD,qB,EAAqB,uI;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,oS;AAAA;AAAA;ACRlC;;AAAI;;AAAa;;AACjB;;AACI;;;;AAMJ;;;;AANkB;;AAAA;;;;;;;;;;sEDMLA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTrC,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;AERlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACII;;AAAmC;;AAAmB;;AAAuB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0D;;AAAI;;AAAI;;;;;;AAA5G;;AAAA;;AAAsB;;AAAA;;;;QDIhDqC,wB;AAGX,wCAAmBC,WAAnB,EAAiD;AAAA;;AAA9B,aAAAA,WAAA,GAAAA,WAAA;AAAiC;;;;mCAE5C;AAAA;;AACN,eAAKA,WAAL,CAAiBrD,IAAjB,GAAwBzB,SAAxB,CAAkC,UAAA+E,KAAK,EAAI;AACzC,kBAAI,CAACC,SAAL,GAAiBD,KAAjB;AACD,WAFD;AAGD;;;sCAEaxG,I,EAAM;AAAA;;AAClB,eAAKuG,WAAL,CAAiBG,KAAjB,CAAuB1G,IAAvB,EAA6ByB,SAA7B,CAAuC,UAAA+E,KAAK,EAAI;AAC9C,kBAAI,CAACC,SAAL,GAAiBD,KAAjB;AACD,WAFD;AAGD;;;qCAEY1F,S,EAAW;AAAA;;AACtB,eAAKyF,WAAL,CAAiBI,IAAjB,CAAsB7F,SAAtB,EAAiCW,SAAjC,CAA2C,UAAA+E,KAAK,EAAI;AAClD,kBAAI,CAACC,SAAL,GAAiBD,KAAjB;AACD,WAFD;AAGD;;;;;;;uBArBUF,wB,EAAwB,2I;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,c;AAAA,a;AAAA,wK;AAAA;AAAA;;;ACRrC;;AAAI;;AAAS;;AACb;;AAA8C;;AAAQ;AAAA;;AAAA;;AAAS,gBAAAM,aAAA;AAA6B,+BAAgB,EAAhB;AAAkB,WAAxD;;AAA2D;;AAAK;;AAEtH;;AACI;;AACJ;;;;AADQ;;AAAA;;;;;;;;;sEDIKN,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTvC,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;AERrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACIQ;;AACI;;AACI;;;;AACJ;;AACJ;;;;;;AAHO;;AAAA;;AACC;;AAAA;;;;;;AAJhB;;AACI;;AACI;;AAKJ;;AACJ;;;;;;AANY;;AAAA;;;;QDKC4C,qB;AAGX,qCAAmBC,KAAnB,EAA2C;AAAA;;AAAxB,aAAAA,KAAA,GAAAA,KAAA;AAA2B;;;;mCAEtC;AACN,eAAKC,MAAL,GAAc,KAAKD,KAAL,CAAW5D,IAAX,EAAd;AACD;;;gCAEO8D,Y,EAAsB;AAC5B,eAAKF,KAAL,CAAWG,OAAX,CAAmBD,YAAnB,EAAiCvF,SAAjC;AACD;;;;;;;uBAXUoF,qB,EAAqB,4I;AAAA,K;;;YAArBA,qB;AAAqB,yC;AAAA,c;AAAA,a;AAAA,uE;AAAA;AAAA;ACTlC;;AAAI;;AAAU;;AAEd;;;;;;AAAc;;AAAA;;;;;;;;;;sEDODA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT9C,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;;;AACJ;;;;;;AADI;;AAAA;;;;QDSSiD,uB;AAGX,uCAAmBJ,KAAnB,EAAkDK,KAAlD,EAAyE;AAAA;;AAAtD,aAAAL,KAAA,GAAAA,KAAA;AAA+B,aAAAK,KAAA,GAAAA,KAAA;AAA0B;;;;mCAEpE;AACN,eAAKC,KAAL,GAAa,KAAKN,KAAL,CAAWG,OAAX,CAAmB,KAAKE,KAAL,CAAWlE,QAAX,CAAoBoE,MAApB,CAA2B,UAA3B,CAAnB,CAAb;AACD;;;;;;;uBAPUH,uB,EAAuB,4I,EAAA,+H;AAAA,K;;;YAAvBA,uB;AAAuB,2C;AAAA,c;AAAA,a;AAAA,2B;AAAA;AAAA;ACVpC;;;;;;AAAc;;;;;;;;;;sEDUDA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTnD,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVpC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMqD,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAInC,OAAO,CAACoC,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class ScriptStatus {\n    public Name: string;\n    public Running: boolean = false;\n\n    constructor(name: string, running: boolean) {\n        this.Name = name;\n        this.Running = running;\n    }\n}","export class TestCase {\n    public SnapshotName: string;\n    private _windowTimes: Set<number>;\n    public TestCaseID: number;\n\n    constructor(apiSource: any) {\n        this.SnapshotName = apiSource.snap_name;\n        this.TestCaseID = apiSource.case_id;\n        this._windowTimes = new Set<number>();\n    }\n\n    public AddWindow(time: number) {\n        this._windowTimes.add(time);\n    }\n\n    public get Duration(): number {\n        let startTime = Math.min(...this._windowTimes.values());\n        let endTime = Math.max(...this._windowTimes.values());\n        return Math.floor((endTime - startTime) / 1000);\n    }\n\n    public get StartTime(): number {\n        return Math.min(...this._windowTimes.values());\n    }\n\n    public get WindowTimes(): number[] {\n        return [...this._windowTimes.values()];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, interval } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LiveDataService {\n  private _data: any;\n  public Data: Subject<any> = new Subject<any>();\n\n  constructor(private httpClient: HttpClient) {\n    interval(10000).pipe(startWith(0)).subscribe(() => {\n      this.httpClient.get('http://172.24.84.10/api/LiveData.php?a=data&window=30').subscribe(data => {\n        this.Data.next(data);\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnapshotService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  public List(): Observable<any[]> {\n    return this.httpClient.get<any[]>('http://172.24.84.10/api/Snapshots.php?a=list');\n  }\n\n  public Start(name): Observable<any> {\n    return this.httpClient.get<any>('http://172.24.84.10/api/Snapshots.php?a=start&name=' + name);\n  }\n\n  public Stop(startTime): Observable<any> {\n    return this.httpClient.get<any>('http://172.24.84.10/api/Snapshots.php?a=stop&start=' + startTime);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ReplaySubject, interval } from 'rxjs';\nimport { ScriptStatus } from '../_classes/script-status';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n  public Scripts$: ReplaySubject<Set<ScriptStatus>> = new ReplaySubject<Set<ScriptStatus>>();\n  private tick = interval(1000);\n\n  constructor(private httpClient: HttpClient) {\n    this.tick.subscribe(() => {\n      this.httpClient.get('http://172.24.84.10/api/Scripts.php').subscribe((status: any[]) => {\n        let scripts = new Set<ScriptStatus>();\n        status.forEach(script => {\n          scripts.add(new ScriptStatus(script.name, script.running));\n        })\n        this.Scripts$.next(scripts);\n      })\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { TestCase } from '../_classes/test-case';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestCaseService {\n  private _testCases: TestCase[] = [];\n\n  constructor(private httpClient: HttpClient) {\n    let pizza = 'pasta';\n  }\n\n  public List(): Observable<TestCase[]> {\n    return this.httpClient.get<any[]>('http://172.24.84.10/api/TestCases.php?a=list').pipe(\n      map(apiCases => {\n        let workingCase: TestCase = null;\n        apiCases.forEach(apiCase => {\n          workingCase = this._testCases.find(c => c.SnapshotName == apiCase.snap_name && c.TestCaseID == apiCase.case_id);\n          if(workingCase == null) {\n            this._testCases.push(new TestCase(apiCase));\n          } else {\n            workingCase.AddWindow(apiCase.test_ac_time);\n          }\n        });\n\n        return this._testCases;\n      })\n    )\n  }\n\n  public GetData(snapshot: string): Observable<any> {\n    return this.List().pipe(\n      switchMap(testCases => {\n        let workingCase = testCases.find(c => c.SnapshotName == snapshot);\n        return this.httpClient.post<any>('http://172.24.84.10/api/TestCases.php?a=data', {times: workingCase.WindowTimes});\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LiveDataViewerComponent } from './live-data-viewer/live-data-viewer.component';\nimport { TestCaseViewerComponent } from './test-case-viewer/test-case-viewer.component';\nimport { TestCaseListComponent } from './test-case-list/test-case-list.component';\n\n\nconst routes: Routes = [\n  { path: 'live', component: LiveDataViewerComponent },\n  { path: 'testcases', component: TestCaseListComponent },\n  { path: 'testcase/:snapshot', component: TestCaseViewerComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'MeterPi';\n}\n","<header>\n    <app-header></app-header>\n</header>\n<div class=\"d-flex\">\n    <div class=\"mr-4\">\n        <app-script-status></app-script-status>\n        <app-snapshot-control></app-snapshot-control>\n    </div>\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ScriptStatusComponent } from './script-status/script-status.component';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faExclamationTriangle, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { SnapshotControlComponent } from './snapshot-control/snapshot-control.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TestCaseViewerComponent } from './test-case-viewer/test-case-viewer.component';\nimport { LiveDataViewerComponent } from './live-data-viewer/live-data-viewer.component';\nimport { ChartComponent } from './chart/chart.component';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport { TestCaseListComponent } from './test-case-list/test-case-list.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScriptStatusComponent,\n    SnapshotControlComponent,\n    TestCaseViewerComponent,\n    LiveDataViewerComponent,\n    ChartComponent,\n    HeaderComponent,\n    TestCaseListComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    NgbModule,\n    NgxChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(public library: FaIconLibrary) {\n    library.addIcons(faExclamationTriangle, faCheck);\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss']\n})\nexport class ChartComponent implements OnInit {\n  @Input() data: any;\n\n  view: any[] = [1200, 600];\n\n  // options\n  legend: boolean = true;\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Time';\n  yAxisLabel: string = 'AC Value';\n  timeline: boolean = true;\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  };\n\n  constructor() { \n  }\n\n  ngOnInit(): void {\n  }\n\n  onSelect(data): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n\n}\n","<ngx-charts-line-chart\n  [view]=\"view\"\n  [scheme]=\"colorScheme\"\n  [legend]=\"legend\"\n  [showXAxisLabel]=\"showXAxisLabel\"\n  [showYAxisLabel]=\"showYAxisLabel\"\n  [xAxis]=\"xAxis\"\n  [yAxis]=\"yAxis\"\n  [xAxisLabel]=\"xAxisLabel\"\n  [yAxisLabel]=\"yAxisLabel\"\n  [timeline]=\"timeline\"\n  [results]=\"data\"\n  (select)=\"onSelect($event)\"\n  (activate)=\"onActivate($event)\"\n  (deactivate)=\"onDeactivate($event)\"\n  yScaleMin=\"-0.5\"\n  yScaleMax=\"0.5\"\n  >\n</ngx-charts-line-chart>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"border-bottom border-dark\">\n    <a [routerLink]=\"'/live'\" class=\"mr-3\">Live Data</a>\n    <a [routerLink]=\"'/testcases'\">Test Cases</a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LiveDataService } from '../_services/live-data.service';\n\n@Component({\n  selector: 'app-live-data-viewer',\n  templateUrl: './live-data-viewer.component.html',\n  styleUrls: ['./live-data-viewer.component.scss']\n})\nexport class LiveDataViewerComponent implements OnInit {\n  public datumCount: number = 0;\n\n  constructor(public dataService: LiveDataService) {\n    this.dataService.Data.subscribe(data => {\n      this.datumCount = data[0].series.length;\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Live Data</h1>\n<h2>Showing {{datumCount}} readings</h2>\n\n<ng-container *ngIf=\"(dataService.Data | async) as data\">\n    <app-chart [data]=\"data\"></app-chart>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { StatusService } from '../_services/status.service';\n\n@Component({\n  selector: 'app-script-status',\n  templateUrl: './script-status.component.html',\n  styleUrls: ['./script-status.component.scss']\n})\nexport class ScriptStatusComponent implements OnInit {\n\n  constructor(public statusSvc: StatusService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Script Status</h1>\n<ul>\n    <ng-container *ngIf=\"(statusSvc.Scripts$ | async) as scripts\">\n        <li *ngFor=\"let script of scripts\">\n            <fa-icon *ngIf=\"script.Running\" icon=\"check\" class=\"mr-2 text-success\"></fa-icon>\n            <fa-icon *ngIf=\"!script.Running\" icon=\"exclamation-triangle\" class=\"mr-2 text-danger\"></fa-icon>\n            {{script.Name}}</li>\n    </ng-container>\n</ul>","import { Component, OnInit } from '@angular/core';\nimport { SnapshotService } from '../_services/snapshot.service';\n\n@Component({\n  selector: 'app-snapshot-control',\n  templateUrl: './snapshot-control.component.html',\n  styleUrls: ['./snapshot-control.component.scss']\n})\nexport class SnapshotControlComponent implements OnInit {\n  Snapshots: any[];\n\n  constructor(public snapshotSvc: SnapshotService) { }\n\n  ngOnInit(): void {\n    this.snapshotSvc.List().subscribe(snaps => {\n      this.Snapshots = snaps;\n    })\n  }\n\n  StartSnapshot(name) {\n    this.snapshotSvc.Start(name).subscribe(snaps => {\n      this.Snapshots = snaps;\n    });\n  }\n\n  StopSnapshot(startTime) {\n    this.snapshotSvc.Stop(startTime).subscribe(snaps => {\n      this.Snapshots = snaps;\n    });\n  }\n\n}\n","<h1>Snapshots</h1>\n<input type=\"text\" id=\"snap_name\" #snapName /><button (click)=\"StartSnapshot(snapName.value);snapName.value='';\">Start</button>\n\n<ul id=\"snap_list\">\n    <li *ngFor=\"let snap of Snapshots\">{{snap.snap_name}} <a [routerLink]=\"null\" (click)=\"StopSnapshot(snap.snap_start_time)\" class=\"ml-3\">Stop</a></li>\n</ul>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TestCaseService } from '../_services/test-case.service';\n\n@Component({\n  selector: 'app-test-case-list',\n  templateUrl: './test-case-list.component.html',\n  styleUrls: ['./test-case-list.component.scss']\n})\nexport class TestCaseListComponent implements OnInit {\n  public Tests$: Observable<any>;\n\n  constructor(public tcSvc: TestCaseService) { }\n\n  ngOnInit(): void {\n    this.Tests$ = this.tcSvc.List();\n  }\n\n  GetData(snapshotName: string) {\n    this.tcSvc.GetData(snapshotName).subscribe();\n  }\n\n}\n","<h1>Test Cases</h1>\n\n<ng-container *ngIf=\"(Tests$ | async) as tests\">\n    <ul>\n        <li *ngFor=\"let test of tests\">\n            <a [routerLink]=\"['/testcase', test.SnapshotName]\">\n                {{test.SnapshotName}} {{test.TestCaseID}}: {{test.Duration}}s from {{test.StartTime | date:'short'}}\n            </a>\n        </li>\n    </ul>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { TestCaseService } from '../_services/test-case.service';\nimport { Observable } from 'rxjs';\nimport { ActivatedRouteSnapshot, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-test-case-viewer',\n  templateUrl: './test-case-viewer.component.html',\n  styleUrls: ['./test-case-viewer.component.scss']\n})\nexport class TestCaseViewerComponent implements OnInit {\n  public Test$: Observable<any>;\n\n  constructor(public tcSvc: TestCaseService, public route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.Test$ = this.tcSvc.GetData(this.route.snapshot.params['snapshot']);\n  }\n\n}\n","<ng-container *ngIf=\"(Test$ | async) as test\">\n    {{test | json}}\n</ng-container>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}